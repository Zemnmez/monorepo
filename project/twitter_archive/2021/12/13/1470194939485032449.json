{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1470194939485032449"
        ],
        "editableUntil": "2021-12-13T01:52:43.131Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [
        {
          "name": "Matti Palli üßô‚Äç‚ôÇÔ∏è",
          "screen_name": "tritlo",
          "indices": [
            "0",
            "7"
          ],
          "id_str": "105945478",
          "id": "105945478"
        },
        {
          "name": "deech",
          "screen_name": "deech",
          "indices": [
            "8",
            "14"
          ],
          "id_str": "14572517",
          "id": "14572517"
        }
      ],
      "urls": []
    },
    "display_text_range": [
      "0",
      "285"
    ],
    "favorite_count": "0",
    "in_reply_to_status_id_str": "1470194361094721539",
    "id_str": "1470194939485032449",
    "in_reply_to_user_id": "601449312",
    "truncated": false,
    "retweet_count": "0",
    "id": "1470194939485032449",
    "in_reply_to_status_id": "1470194361094721539",
    "created_at": "Mon Dec 13 00:52:43 +0000 2021",
    "favorited": false,
    "full_text": "@tritlo @deech in abstract, yes, strings are being evaluated as code -- but saying \"the strings should have been sanitized\" is not helpful. The log4j authors are simply asking Java to access the member of a value. It's the JNDI subsystem and protocol which is interpreting that as code",
    "lang": "en",
    "in_reply_to_screen_name": "zemnmez",
    "in_reply_to_user_id_str": "601449312"
  }
}