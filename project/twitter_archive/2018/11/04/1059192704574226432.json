{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1059192704574226432"
        ],
        "editableUntil": "2018-11-04T22:16:34.276Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [
        {
          "name": "Gareth Lewin",
          "screen_name": "garethlewin",
          "indices": [
            "0",
            "12"
          ],
          "id_str": "14195214",
          "id": "14195214"
        },
        {
          "name": "Fugi",
          "screen_name": "Fugiman",
          "indices": [
            "13",
            "21"
          ],
          "id_str": "18919799",
          "id": "18919799"
        }
      ],
      "urls": []
    },
    "display_text_range": [
      "0",
      "292"
    ],
    "favorite_count": "0",
    "in_reply_to_status_id_str": "1059180624274026496",
    "id_str": "1059192704574226432",
    "in_reply_to_user_id": "14195214",
    "truncated": false,
    "retweet_count": "0",
    "id": "1059192704574226432",
    "in_reply_to_status_id": "1059180624274026496",
    "created_at": "Sun Nov 04 21:16:34 +0000 2018",
    "favorited": false,
    "full_text": "@garethlewin @Fugiman my preferred way is to establish a meaningful function heirachy that carries relevant information through my APIs. for example, a purely JSON API might just be a series of func (r *Request) (response interface{}, err error) with an http.Handler that binds and muxes them",
    "lang": "en",
    "in_reply_to_screen_name": "garethlewin",
    "in_reply_to_user_id_str": "14195214"
  }
}