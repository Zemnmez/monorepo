load("//ts:rules.bzl", "jest_test", "ts_project")
load("//js:rules.bzl", "js_binary", "js_test")

package(default_visibility = ["//deploy:__subpackages__"])

ts_project(
    name = "release_src",
    srcs = [
        "deploy_test.ts",
        "mocks.ts",
        "program.ts",
        "release.ts",
    ],
    data = [
        "//VERSION",
        "//project/ck3/recursive-vassals:mod_zip",
        "//project/ck3/recursive-vassals:patch",
        "//ts/cmd/svgshot:npm_pkg.publish",
        "//ts/cmd/svgshot:npm_pkg.tgz",
        "//ts/cmd/svgshot:package.json",
        "//ts/do-sync:npm_pkg.publish",
        "//ts/do-sync:npm_pkg.tgz",
        "//ts/do-sync:package.json",
        "//ts/knowitwhenyouseeit:npm_pkg.publish",
        "//ts/knowitwhenyouseeit:npm_pkg.tgz",
        "//ts/knowitwhenyouseeit:package.json",
    ],
    deps = [
        "//:node_modules/@actions/github",
        "//:node_modules/@bazel/runfiles",
        "//:node_modules/@types/jest",
        "//:node_modules/@types/node",
        "//:node_modules/commander",
        "//:node_modules/mime",
        "//ts",
        "//ts/pulumi",
    ],
)

js_binary(
    name = "release",
    data = [
        ":release_src",
    ],
    entry_point = "release.js",
)

js_test(
    name = "smoke",
    args = [
        "--dryRun",
        "true",
    ],
    data = [":release_src"],
    entry_point = "release.js",
)

alias(
    name = "deploy",
    actual = "release",
)

jest_test(
    name = "test",
    srcs = ["deploy_test.js"],
    deps = [":release_src"],
)
