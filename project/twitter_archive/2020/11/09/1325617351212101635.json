{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1325617351212101635"
        ],
        "editableUntil": "2020-11-09T02:52:59.965Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [],
      "urls": []
    },
    "display_text_range": [
      "0",
      "271"
    ],
    "favorite_count": "0",
    "id_str": "1325617351212101635",
    "truncated": false,
    "retweet_count": "0",
    "id": "1325617351212101635",
    "created_at": "Mon Nov 09 01:52:59 +0000 2020",
    "favorited": false,
    "full_text": "generics are strange. its easy to imagine a user as a struct or a class, but a generic feels like it doesn’t have a natural boundary in that way. sure, they’re productive, but they work best only when needed; like a way to solve a problem without an underlying philosophy",
    "lang": "en"
  }
}