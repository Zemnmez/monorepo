{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1697740544993366127"
        ],
        "editableUntil": "2023-09-01T23:37:43.000Z",
        "editsRemaining": "5",
        "isEditEligible": false
      }
    },
    "retweeted": false,
    "source": "<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [
        {
          "name": "David K ðŸŽ¹",
          "screen_name": "DavidKPiano",
          "indices": [
            "0",
            "12"
          ],
          "id_str": "992126114",
          "id": "992126114"
        }
      ],
      "urls": []
    },
    "display_text_range": [
      "0",
      "284"
    ],
    "favorite_count": "0",
    "in_reply_to_status_id_str": "1697635064782246123",
    "id_str": "1697740544993366127",
    "in_reply_to_user_id": "992126114",
    "truncated": false,
    "retweet_count": "0",
    "id": "1697740544993366127",
    "in_reply_to_status_id": "1697635064782246123",
    "created_at": "Fri Sep 01 22:37:43 +0000 2023",
    "favorited": false,
    "full_text": "@DavidKPiano i cant tell if this is parody, but WebSockets is a duplex transport. the WebSockets analogue to Promises is simply â€˜eventsâ€™, which promises were explicitly created to simplify. the closest bi-directional equivalent of Promises is probably CSP channels (in Go for example)",
    "lang": "en",
    "in_reply_to_screen_name": "DavidKPiano",
    "in_reply_to_user_id_str": "992126114"
  }
}