{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1495192161125470209"
        ],
        "editableUntil": "2022-02-20T01:22:45.196Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [
        {
          "name": "JavaScriptErika",
          "screen_name": "JavaScriptErika",
          "indices": [
            "0",
            "16"
          ],
          "id_str": "3026125809",
          "id": "3026125809"
        }
      ],
      "urls": []
    },
    "display_text_range": [
      "0",
      "262"
    ],
    "favorite_count": "1",
    "in_reply_to_status_id_str": "1495157482729181186",
    "id_str": "1495192161125470209",
    "in_reply_to_user_id": "3026125809",
    "truncated": false,
    "retweet_count": "0",
    "id": "1495192161125470209",
    "in_reply_to_status_id": "1495157482729181186",
    "created_at": "Sun Feb 20 00:22:45 +0000 2022",
    "favorited": false,
    "full_text": "@JavaScriptErika I am 99.99% sure this should work provided you don’t persist the handle on the element. React does not always guarantee an element *instance* will persist after a re-render, which is why there’s a focus on controlled params / mount &amp; unmount",
    "lang": "en",
    "in_reply_to_screen_name": "JavaScriptErika",
    "in_reply_to_user_id_str": "3026125809"
  }
}