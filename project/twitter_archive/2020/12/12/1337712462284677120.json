{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1337712462284677120"
        ],
        "editableUntil": "2020-12-12T11:54:39.161Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [],
      "urls": []
    },
    "display_text_range": [
      "0",
      "244"
    ],
    "favorite_count": "1",
    "in_reply_to_status_id_str": "1337711484651114496",
    "id_str": "1337712462284677120",
    "in_reply_to_user_id": "601449312",
    "truncated": false,
    "retweet_count": "0",
    "id": "1337712462284677120",
    "in_reply_to_status_id": "1337711484651114496",
    "created_at": "Sat Dec 12 10:54:39 +0000 2020",
    "favorited": false,
    "full_text": "I have been writing a system to process and bind unist / unified ecosystem AST nodes to react element trees which has been cool. the specific case is very simple but i am not sure how i want to implement the general case in a composable way yet",
    "lang": "en",
    "in_reply_to_screen_name": "zemnmez",
    "in_reply_to_user_id_str": "601449312"
  }
}