# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Lint:
    runs-on: ubuntu-latest
    env:
      cache-name: cache1
      YARN_CACHE_FOLDER: yarn-cache-dir
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true # garamond
      - name: Restore Cache
        uses: actions/cache@v2
        with: 
          path: "yarn-cache-dir"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn install
      - run: yarn lint
  
  Tests:
    runs-on: ubuntu-latest
    env:
      cache-name: cache1
      YARN_CACHE_FOLDER: yarn-cache-dir
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true # garamond
      - name: Restore Cache
        uses: actions/cache@v2
        id: yarn-cache
        with: 
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: yarn test

  
  Coverage:
    runs-on: ubuntu-latest
    env:
      YARN_CACHE_FOLDER: yarn-cache-dir
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true # garamond
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true # garamond
      - name: Restore cache
        uses: actions/cache@v2
        id: yarn-cache
        with: 
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: yarn coverage

  Build:
    runs-on: ubuntu-latest
    env:
      YARN_CACHE_FOLDER: yarn-cache-dir
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true # garamond
      - name: Cache...
        uses: actions/cache@v2
        id: yarn-cache
        with: 
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: yarn build

  Prepack:
    runs-on: ubuntu-latest
    env:
      YARN_CACHE_FOLDER: yarn-cache-dir
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true # garamond
      - name: Cache...
        uses: actions/cache@v2
        id: yarn-cache
        with: 
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - run: yarn prepack
