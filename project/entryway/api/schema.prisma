datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                   Int                    @id @default(autoincrement())
    createdAt            DateTime               @default(now())
    email                String?                @unique
    // how to display this user's name, if known
    displayName          String?
    // a phone number, if known
    phoneNumber          String?
    role                 Role                   @default(NOBODY)
    // authentication methods the user can use. may be none at all
    logsInVia            AuthenticationLink[]
    // every time this user has granted entry via personal code
    codeBasedEntryGrant  codeBasedEntryGrant[]
    // every time tihs user has granted entry via being phoned and approving
    phoneBasedEntryGrant phoneBasedEntryGrant[]
}

// a code that a user may use to enter the building
model entryCode {
    id                  Int                   @id @default(autoincrement())
    createdAt           DateTime              @default(now())
    // whether this code may still be used
    enabled             Boolean
    // only one user may have a single code
    code                Int                   @unique
    codeBasedEntryGrant codeBasedEntryGrant[]
}

// a record that someone was granted entry via a specific entryCode
model codeBasedEntryGrant {
    id          Int       @id @default(autoincrement())
    createdAt   DateTime  @default(now())
    // which code was used to allow the user in
    entryCode   entryCode @relation(fields: [entryCodeId], references: [id])
    entryCodeId Int
    // what user was allowed in
    user        User      @relation(fields: [userId], references: [id])
    userId      Int
}

// someone has been allowed entry via phoning a user with
// the right to grant entry
model phoneBasedEntryGrant {
    if          Int      @id @default(autoincrement())
    createdAt   DateTime @default(now())
    // the phone number which approved the entry
    phoneNumber String
    // the user the number was associated with at time of entry
    user        User     @relation(fields: [userId], references: [id])
    userId      Int
}

// Represents a potentially enabled OIDC credential selector
model AuthenticationLink {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    // issuer of the authentication credential as in OIDC
    iss       String
    // subject of the authentication credential as in OIDC
    sub       String
    // false default just because I'd fuck this up otherwise
    enabled   Boolean  @default(false)
    // the first-party user we're linked to
    User      User     @relation(fields: [userId], references: [id])
    userId    Int
}

enum Role {
    NOBODY
    USER
    ADMIN
}
