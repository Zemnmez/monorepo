
#####################################################################
# EFFECT LIST
#####################################################################
# !!! Remember to add all new effects with a short description here !!!

#progress_towards_friend_effect		- Sets potential friend + opinion or upgrades potential friend to full friend
#progress_towards_rival_effect 		- Sets potential rival + opinion or upgrades potential rival to full rival
#progress_towards_lover_effect 		- Sets potential lover + opinion or upgrades potential lover to full lover

#get_characters_of_major_interest_effect
#get_characters_of_minor_interest_effect
#get_characters_of_interest_effect

#get_potential_enemies_effect
#get_random_potential_enemy_effect

#####################################################################
# EFFECTS
#####################################################################

### RELATION PROGRESS EFFECTS ###

# Needs CHARACTER and OPINION (yes, no, or value)

#Sets potential friend + opinion or upgrades potential friend to full friend
progress_towards_friend_effect = {
	#If potential friend, set friend!
	if = {
		limit = {
			has_relation_potential_friend = $CHARACTER$
			can_set_relation_friend_trigger = { CHARACTER = $CHARACTER$ }
		}
		set_relation_friend = $CHARACTER$
	}
	# If not...
	else = {

		# ... set potential relation if we're not already friends!
		if = {
			limit = { can_set_relation_potential_friend_trigger = { CHARACTER = $CHARACTER$ } }
			set_relation_potential_friend = $CHARACTER$
		}

		# ... add opinion if we should!
		save_temporary_scope_value_as = {
			name = friend_opinion
			value = $OPINION$
		}
		if = {
			limit = { scope:friend_opinion = yes }
			reverse_add_opinion = {
				target = $CHARACTER$
				modifier = friendliness_opinion
				opinion = 15
			}
			hidden_effect = {
				add_opinion = {
					target = $CHARACTER$
					modifier = friendliness_opinion
					opinion = 15
				}
			}
		}
		else_if = {
			limit = { NOT = { scope:friend_opinion = no } }
			reverse_add_opinion = {
				target = $CHARACTER$
				modifier = friendliness_opinion
				opinion = scope:friend_opinion
			}
			hidden_effect = {
				add_opinion = {
					target = $CHARACTER$
					modifier = friendliness_opinion
					opinion = scope:friend_opinion
				}
			}
		}
	}
}

#Sets potential rival + opinion or upgrades potential rival to full rival
progress_towards_rival_effect = {
	#If potential rival, set rival!
	if = {
		limit = {
			has_relation_potential_rival = $CHARACTER$
			can_set_relation_rival_trigger = { CHARACTER = $CHARACTER$ }
		}
		set_relation_rival = $CHARACTER$
	}
	# If not...
	else = {
		# ... set potential relation if we're not already rivals!
		if = {
			limit = { can_set_relation_potential_rival_trigger = { CHARACTER = $CHARACTER$ } }
			set_relation_potential_rival = $CHARACTER$
		}
		
		# ... add opinion if we should!
		save_temporary_scope_value_as = {
			name = rival_opinion
			value = $OPINION$
		}
		if = {
			limit = { scope:rival_opinion = yes }
			reverse_add_opinion = {
				target = $CHARACTER$
				modifier = hate_opinion
				opinion = -15
			}
			hidden_effect = {
				add_opinion = {
					target = $CHARACTER$
					modifier = hate_opinion
					opinion = -15
				}
			}
		}
		else_if = {
			limit = { NOT = { scope:rival_opinion = no } }
			reverse_add_opinion = {
				target = $CHARACTER$
				modifier = hate_opinion
				opinion = scope:rival_opinion
			}
			hidden_effect = {
				add_opinion = {
					target = $CHARACTER$
					modifier = hate_opinion
					opinion = scope:rival_opinion
				}
			}
		}
	}
}

#Sets potential lover + opinion or upgrades potential lover to full lover
progress_towards_lover_effect = {
	#If potential lover, set lover!
	if = {
		limit = {
			has_relation_potential_lover = $CHARACTER$
			can_set_relation_lover_trigger = { CHARACTER = $CHARACTER$ }
		}
		set_relation_lover = $CHARACTER$
	}
	# If not...
	else = {
		# ... set potential relation if we're not already rivals!
		if = {
			limit = { can_set_relation_potential_lover_trigger = { CHARACTER = $CHARACTER$ } }
			set_relation_potential_lover = $CHARACTER$
		}

		# ... add opinion if we should!
		save_temporary_scope_value_as = {
			name = lover_opinion
			value = $OPINION$
		}
		if = {
			limit = { scope:lover_opinion = yes }
			reverse_add_opinion = {
				target = $CHARACTER$
				modifier = romance_opinion
				opinion = 15
			}
			hidden_effect = {
				add_opinion = {
					target = $CHARACTER$
					modifier = romance_opinion
					opinion = 15
				}
			}
		}
		else_if = {
			limit = { NOT = { scope:lover_opinion = no } }
			reverse_add_opinion = {
				target = $CHARACTER$
				modifier = romance_opinion
				opinion = scope:lover_opinion
			}
			hidden_effect = {
				add_opinion = {
					target = $CHARACTER$
					modifier = romance_opinion
					opinion = scope:lover_opinion
				}
			}
		}
	}
}

### CHARACTERS OF INTEREST EFFECTS ###

#Makes a list of every character of major interest
	#Parameters:
	# LISTNAME - the name of the list

get_characters_of_major_interest_effect = {
	save_temporary_scope_as = major_root
	# 1 - Player heir
	if = {
		limit = {
			major_interest_player_heir_trigger = { LISTNAME = $LISTNAME$ }
		}
		player_heir = { add_to_temporary_list = $LISTNAME$ }
	}
	# 2 - Liege
	if = {
		limit = {
			major_interest_liege_trigger = { LISTNAME = $LISTNAME$ }
		}
		liege = { add_to_temporary_list = $LISTNAME$ }
	}
	# 3 - Realm Priest
	if = {
		limit = {
			major_interest_realm_priest_trigger = { LISTNAME = $LISTNAME$ }
		}
		cp:councillor_court_chaplain = { add_to_temporary_list = $LISTNAME$ }
	}
	# 4 - Primary Spouse
	if = {
		limit = {
			major_interest_primary_spouse_trigger = { LISTNAME = $LISTNAME$ }
		}
		primary_spouse = { add_to_temporary_list = $LISTNAME$ }
	}
	# 5 - Spymaster & # 11 - Other councillors
	every_normal_councillor = {
		limit = {
			NOT = { is_in_list = $LISTNAME$ }
		}
		add_to_temporary_list = $LISTNAME$
	}
	# 6 - Powerful vassals
	every_powerful_vassal = {
		limit = {
			NOT = { is_in_list = $LISTNAME$ }
		}
		add_to_temporary_list = $LISTNAME$
	}
	# 7 - Religious head (Excluded because they're highly context-specific)
	# 8 - Potential heirs (Player only)
	if = {
		limit = { is_ai = no }
		if = {
			limit = { exists = dynasty }
			dynasty = {
				every_dynasty_member = {
					limit = {
						major_interest_potential_heirs_trigger = { LISTNAME = $LISTNAME$ CHARACTER = scope:major_root }
					}
					add_to_temporary_list = $LISTNAME$
				}
			}
		}
	# 9 - Allies (Player only, Enemies are only relevant for content about wars)
		every_ally = {
			limit = {
				NOT = { is_in_list = $LISTNAME$ }
			}
			add_to_temporary_list = $LISTNAME$
		}
	}
	# 10 - Neighboring rulers (not included in this list, hard to gauge relevance)
}

#Makes a list of every character of minor interest
	#Parameters:
	# CHARACTER - the character who the list will be for
	# LISTNAME - the name of the list
get_characters_of_minor_interest_effect = {
	save_temporary_scope_as = minor_root
	# 1 - Concubines & secondary spouses
	every_consort = {
		limit = { minor_interest_concubines_secondary_spouses_trigger = { CHARACTER = scope:minor_root LISTNAME = $LISTNAME$ } }
		add_to_temporary_list = $LISTNAME$
	}	
	# 2 - Direct vassals of high tier
	every_vassal = {
		limit = { minor_interest_high_tier_vassal_trigger = { LISTNAME = $LISTNAME$ } }
		add_to_temporary_list = $LISTNAME$
	}
	# 3 - Betrothed
	if = {
		limit = { minor_interest_betrothed_trigger = { LISTNAME = $LISTNAME$ } }
		betrothed = { add_to_temporary_list = $LISTNAME$ }
	}
	# 4 - Lovers
	every_relation = {
		type = lover
		limit = { NOT = { is_in_list = $LISTNAME$ } }
		add_to_temporary_list = $LISTNAME$
	}
	# 5 - Rivals (excluded as they're typically only used in specific contexts)
	# 6 - Close relatives
	every_close_or_extended_family_member = {
		limit = { minor_interest_close_relatives_trigger = { CHARACTER = scope:minor_root LISTNAME = $LISTNAME$ } }
		add_to_temporary_list = $LISTNAME$
	}
	if = { #Below is just for players
		limit = { is_ai = no }
	# 7 - Guardian
		every_relation = {
			type = guardian
			limit = { NOT = { is_in_list = $LISTNAME$ } }
			add_to_temporary_list = $LISTNAME$
		}
	# 8 - Ward
		every_relation = {
			type = ward
			limit = { NOT = { is_in_list = $LISTNAME$ } }
			add_to_temporary_list = $LISTNAME$
		}
	# 9 - Friends
		every_relation = {
			type = friend
			limit = { NOT = { is_in_list = $LISTNAME$ } }
			add_to_temporary_list = $LISTNAME$
		}
	# 10 - Knights
		every_knight = {
			limit = { NOT = { is_in_list = $LISTNAME$ } }
			add_to_temporary_list = $LISTNAME$
		}
	# 11 - Highly skilled courtiers (players only)
		if = {
			limit = { is_ai = no }
			every_courtier = {
				limit = { minor_interest_skilled_courtiers_trigger = { LISTNAME = $LISTNAME$ } }
				add_to_temporary_list = $LISTNAME$
			}
		}
		every_liege_or_above = {
			limit = { minor_interest_liege_or_above_trigger = { CHARACTER = scope:minor_root LISTNAME = $LISTNAME$ } }
			add_to_temporary_list = $LISTNAME$
		}
	}
}



#Makes a list of all characters of interest
	#Parameters:
	# LISTNAME - the name of the list
get_characters_of_interest_effect = {
	get_characters_of_major_interest_effect = {
		LISTNAME = $LISTNAME$
	}
	get_characters_of_minor_interest_effect = {
		LISTNAME = $LISTNAME$
	}
}





#Makes a list of characters who are classified as potential enemies
	#Parameters
	# CHARACTER - The character whose enemies are being found
	# LISTNAME - The name of the list
get_potential_enemies_effect = {
	$CHARACTER$ = {
		every_vassal = {
			limit = {
				is_powerful = yes
				opinion = {
					target = $CHARACTER$
					value <= 0
				}
				NOT = { is_in_list = $LISTNAME$ }
			}
			add_to_list = $LISTNAME$
		}
		every_relation = {
			type = rival
			limit = {
				NOT = { is_in_list = $LISTNAME$ }
			}
			add_to_list = $LISTNAME$
		}
		if = {
			limit = {
				is_independent_ruler = no
				liege = {
					opinion = {
						target = $CHARACTER$
						value <= 0
					}
					NOT = {
						is_in_list = $LISTNAME$
					}
				}
			}
			liege = {
				add_to_list = $LISTNAME$
			}
		}
		if = {
			limit = {
				is_independent_ruler = yes
			}
			every_neighboring_top_liege_realm_owner = {
				limit = {
					NOT = { is_allied_to = $CHARACTER$ }
					OR = {
						opinion = {
							target = $CHARACTER$
							value <= 20
						}
						AND = {
							opinion = {
								target = $CHARACTER$
								value <= 50
							}
							has_any_cb_on = $CHARACTER$
						}
					}
					NOT = { is_in_list = $LISTNAME$ }
				}
				add_to_list = $LISTNAME$
			}
		}
		#Potential Heirs that do not like you
	}
}

set_as_oaf_effect = {
	if = {
		limit = {
			NOT = { has_relation_oaf = $CHARACTER$ }
		}
		set_relation_oaf = $CHARACTER$
	}
}
