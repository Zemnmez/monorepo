{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1520148389551239168"
        ],
        "editableUntil": "2022-04-29T21:39:53.717Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [],
      "urls": []
    },
    "display_text_range": [
      "0",
      "228"
    ],
    "favorite_count": "1",
    "id_str": "1520148389551239168",
    "truncated": false,
    "retweet_count": "0",
    "id": "1520148389551239168",
    "created_at": "Fri Apr 29 21:09:53 +0000 2022",
    "favorited": false,
    "full_text": "idk a lot of comparisons between Go and Rust these days seem to downplay how it's not really trivially easy to implement Go's main features in a big algebraic constraint solver which is why they aren't in Rust and they are in Go",
    "lang": "en"
  }
}