{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1395458465255014411"
        ],
        "editableUntil": "2021-05-20T20:16:39.138Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [],
      "urls": []
    },
    "display_text_range": [
      "0",
      "242"
    ],
    "favorite_count": "0",
    "in_reply_to_status_id_str": "1395455737338503169",
    "id_str": "1395458465255014411",
    "in_reply_to_user_id": "601449312",
    "truncated": false,
    "retweet_count": "0",
    "id": "1395458465255014411",
    "in_reply_to_status_id": "1395455737338503169",
    "created_at": "Thu May 20 19:16:39 +0000 2021",
    "favorited": false,
    "full_text": "pretty sure I'm going to abandon this approach... it's nice having non-mutually assignable types for different coordinate systems, but doing it this way also means that I need helpers for every matrix and vector operation to persist that type",
    "lang": "en",
    "in_reply_to_screen_name": "zemnmez",
    "in_reply_to_user_id_str": "601449312"
  }
}