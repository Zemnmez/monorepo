{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1165999516853686272"
        ],
        "editableUntil": "2019-08-26T15:48:42.698Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [
        {
          "name": "Mich√©e Lengronne",
          "screen_name": "MicheeLengronne",
          "indices": [
            "0",
            "16"
          ],
          "id_str": "137964274",
          "id": "137964274"
        },
        {
          "name": "Frederic Jacobs",
          "screen_name": "FredericJacobs",
          "indices": [
            "17",
            "32"
          ],
          "id_str": "18018877",
          "id": "18018877"
        }
      ],
      "urls": []
    },
    "display_text_range": [
      "0",
      "297"
    ],
    "favorite_count": "0",
    "in_reply_to_status_id_str": "1165998691011956737",
    "id_str": "1165999516853686272",
    "in_reply_to_user_id": "137964274",
    "truncated": false,
    "retweet_count": "0",
    "id": "1165999516853686272",
    "in_reply_to_status_id": "1165998691011956737",
    "created_at": "Mon Aug 26 14:48:42 +0000 2019",
    "favorited": false,
    "full_text": "@MicheeLengronne @FredericJacobs the best you can do is CAPTCHA and statistical analysis based on IP address etc. For the login stuffing issue specifically, you can block any logins that attempt to login from places it would be impossible to reach since time of last login and require verification",
    "lang": "en",
    "in_reply_to_screen_name": "MicheeLengronne",
    "in_reply_to_user_id_str": "137964274"
  }
}