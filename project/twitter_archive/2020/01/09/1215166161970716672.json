{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1215166161970716672"
        ],
        "editableUntil": "2020-01-09T07:59:24.366Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [
        {
          "name": "Dad√ó2_jack",
          "screen_name": "Iceland_jack",
          "indices": [
            "0",
            "13"
          ],
          "id_str": "2832623057",
          "id": "2832623057"
        }
      ],
      "urls": []
    },
    "display_text_range": [
      "0",
      "290"
    ],
    "favorite_count": "0",
    "in_reply_to_status_id_str": "1215165666132709376",
    "id_str": "1215166161970716672",
    "in_reply_to_user_id": "601449312",
    "truncated": false,
    "retweet_count": "0",
    "id": "1215166161970716672",
    "in_reply_to_status_id": "1215165666132709376",
    "created_at": "Thu Jan 09 06:59:24 +0000 2020",
    "favorited": false,
    "full_text": "@Iceland_jack 3) I found that my definitions ended up having tenuous names when I started to work with the language more ... I found it hard to describe what the functions should be called. Do you know of any really well described, well split up Haskell performing something I'd understand?",
    "lang": "en",
    "in_reply_to_screen_name": "zemnmez",
    "in_reply_to_user_id_str": "601449312"
  }
}