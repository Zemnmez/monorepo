{
  "tweet": {
    "edit_info": {
      "initial": {
        "editTweetIds": [
          "1106728159091789826"
        ],
        "editableUntil": "2019-03-16T02:25:29.799Z",
        "editsRemaining": "5",
        "isEditEligible": true
      }
    },
    "retweeted": false,
    "source": "<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>",
    "entities": {
      "hashtags": [],
      "symbols": [],
      "user_mentions": [],
      "urls": []
    },
    "display_text_range": [
      "0",
      "289"
    ],
    "favorite_count": "0",
    "in_reply_to_status_id_str": "1106727627233087488",
    "id_str": "1106728159091789826",
    "in_reply_to_user_id": "92807746",
    "truncated": false,
    "retweet_count": "0",
    "id": "1106728159091789826",
    "in_reply_to_status_id": "1106727627233087488",
    "created_at": "Sat Mar 16 01:25:29 +0000 2019",
    "favorited": false,
    "full_text": "@AbortionShark i see. I think your best bet is to have a list of values representing each timer and a value representing which timer is 'current'\n\nin the main part of the application, you sleep for a second add one to the current timer and display them however &amp; check for button press",
    "lang": "en",
    "in_reply_to_screen_name": "Aborshyy",
    "in_reply_to_user_id_str": "92807746"
  }
}