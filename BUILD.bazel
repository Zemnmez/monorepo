# Add rules here to build your software
# See https://docs.bazel.build/versions/master/build-ref.html#BUILD_files

# Allow any ts_library rules in this workspace to reference the config
# Note: if you move the tsconfig.json file to a subdirectory, you can add an alias() here instead
#   so that ts_library rules still use it by default.
#   See https://www.npmjs.com/package/@bazel/typescript#installation

load("@npm//:defs.bzl", "link_js_packages")

link_js_packages()

load("//js:rules.bzl", "copy_to_bin", "js_library")
load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
load("//ts:rules.bzl", "ts_config")
load("@npm//:renovate/package_json.bzl", "bin")


package(default_visibility = [":__subpackages__"])

buildifier(
    name = "buildifier",
)

alias(
    name = "fix",
    actual = "//bzl:fix",
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
)

js_library(
    name = "base_defs",
    srcs = ["Global.d.ts"],
)

exports_files(
    [
        ".prettierrc.json",
        "package.json",
        ".gitignore",
        ".editorconfig",
        ".eslintrc.json",
        "css_loader.d.ts",
        "yarn.lock",
        ".git",
    ],
    visibility = ["//visibility:public"],
)

copy_to_bin(
    name = "swcrc",
    srcs = [".swcrc.json"],
)

bin.renovate_config_validator_test(
    name = "validate_renovate_config_test",
    args = ["$(location renovate.json)"],
    data = ["renovate.json"],
)
