# Add rules here to build your software
# See https://docs.bazel.build/versions/master/build-ref.html#BUILD_files

# Allow any ts_library rules in this workspace to reference the config
# Note: if you move the tsconfig.json file to a subdirectory, you can add an alias() here instead
#   so that ts_library rules still use it by default.
#   See https://www.npmjs.com/package/@bazel/typescript#installation

load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
load("@npm//@bazel/esbuild:esbuild_config.bzl", "esbuild_config")
load("//ts:rules.bzl", "ts_config", "ts_project")
load("//js:rules.bzl", "js_library")

package(default_visibility = [":__subpackages__"])

buildifier(
    name = "buildifier",
)

alias(
    name = "fix",
    actual = "//tools/bazel:fix",
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
)

ts_config(
    name = "tsconfig_node",
    src = "node.tsconfig.json",
    deps = ["//ts/config:node"],
)

ts_config(
    name = "tsconfig_jsx",
    src = "jsx.tsconfig.json",
    deps = ["//ts/config:jsx"],
)

js_library(
    name = "base_defs",
    srcs = ["Global.d.ts"],
)

ts_project(
    name = "jest_config_node_all",
    srcs = ["jest.node.config.ts"],
)

alias(
    name = "jest_config_node",
    actual = ":jest_config_node_all_ts"
)

ts_project(
    name = "jest_config_browser_all",
    srcs = ["jest.browser.config.ts"],
)

alias(
    name = "jest_config_browser",
    actual = ":jest_config_browser_all_ts"
)

exports_files(
    [
        ".prettierrc.json",
        ".gitignore",
        ".editorconfig",
        ".eslintrc.json",
        "css_loader.d.ts",
    ],
    visibility = ["//visibility:public"],
)

esbuild_config(
    name = "esbuild_config",
    config_file = "esbuild.config.mjs",
    deps = [
        "@npm//esbuild-css-modules-plugin",
    ],
)
